import React, { Component } from 'react';
import Grid from '@material-ui/core/Grid';
import PropTypes from 'prop-types';
import axios from 'axios';

import Fav from '../components/Fav';
import Profile from '../components/Profile';

import { connect } from 'react-redux';

class subscriptions extends Component {
    
    constructor(props){
        super(props);
        console.log(this.props);
        this.state = {
            results: [],
            loading: true
        }
    }

    componentDidMount(){
      const following = this.props.user.following;
      let results = [];
      console.log("FOLLOWING");
      console.log(following);
      await following.forEach(element => {
        const username = element.username;
        console.log(username);
        axios
        .get(`/fav/sub/${username}`)
        .then(res => {
            console.log("RES");
            console.log(res);
            //results = results.concat(res.data);
            return res.data;
          }).then(res => {
            results = results.concat(res);
          })
        .catch(err => {
            console.log(err);
            console.log("CANT GET favs");
          })
        
      });
      await results.sort(function(a, b) {
        var keyA = new Date(a.createdAt),
          keyB = new Date(b.createdAt);
        if (keyA < keyB) return -1;
        if (keyA > keyB) return 1;
        return 0;
      });
      console.log("MOUNT RESULTS");
      console.log(results);
      await this.setState({loading: false, results: results});
    }

    renderResults = () => {
      const { results } = this.state;
      console.log("RESULTS");
      console.log(results);
      //console.log("NOT LOADDED");
      //console.log(loadUsers);
      
      
     if(results && results.length > 0){
          return( 
              results.map( fav => {
                  return (
                      <Fav key={fav.favId} fav={fav}/>
                  )
              })
          );
     }
    }

    render() {
        return (
        <Grid container spacing={16}>
            <Grid item sm={8} xs={12}>
            {this.state.loading === false && this.renderResults()}
            </Grid>
            <Grid item sm={4} xs={12}>
            <Profile />
            </Grid>
        </Grid>
        );
    }
}

subscriptions.propTypes = {
  user: PropTypes.object.isRequired
};

const mapStateToProps = (state) => ({
  user: state.user
});

export default connect(
  mapStateToProps
)(subscriptions);





//axios.defaults.baseURL = "https://us-central1-favfay-ec70a.cloudfunctions.net/api";
// axios.defaults.baseURL = "http://localhost:5000/favfay-ec70a/us-central1/api";

/*
var firebaseConfig = {
  apiKey: "AIzaSyBV3gfHs7M6xnSAYnkPcF_JVuz30uv152Y",
  authDomain: "favfay-ec70a.firebaseapp.com",
  databaseURL: "https://favfay-ec70a.firebaseio.com",
  projectId: "favfay-ec70a",
  storageBucket: "favfay-ec70a.appspot.com",
  messagingSenderId: "726588966841",
  appId: "1:726588966841:web:931c8d33bd2192f47f1868",
  measurementId: "G-FC5ZVK26WT"
};
firebase.initializeApp(firebaseConfig);
*/
